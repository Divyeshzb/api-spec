# ********RoostGPT********

# Test generated by RoostGPT for test karate using AI Type Claude AI and AI Model claude-3-opus-20240229
# 
# Feature file generated for /nobelPrizes_get for http method type GET 
# RoostTestHash=977dd819cb
# 
# 

# ********RoostGPT********
Feature: Nobel Prize API Tests

Background:
  * url 'http://localhost:8080'
  * configure headers = { 'Content-Type': 'application/json' }
  * def authToken = karate.properties['AUTH_TOKEN']

  Scenario: Get all Nobel Prizes
    Given path '/2.1/nobelPrizes'
    When method GET
    Then status 200
    And match header Content-Type contains 'application/json'
    And match response.nobelPrizes == '#array'
    And match each response.nobelPrizes contains { awardYear: '#number', category: '#object', categoryFullName: '#object', dateAwarded: '#string', prizeAmount: '#number', prizeAmountAdjusted: '#number', topMotivation: '#object', laureates: '#array' }
    And match response.meta == '#object'
    And match response.links == '#array'

  Scenario: Get Nobel Prizes with query parameters
    * def payload = read('nobelPrizes_get.csv')
    Given path '/2.1/nobelPrizes'
    And params payload[0]
    When method GET
    Then status 200
    And match header Content-Type contains 'application/json'
    And match response.nobelPrizes == '#array'
    And match each response.nobelPrizes contains { awardYear: '#number', category: '#object', categoryFullName: '#object', dateAwarded: '#string', prizeAmount: '#number', prizeAmountAdjusted: '#number', topMotivation: '#object', laureates: '#array' }
    And match response.meta == '#object'
    And match response.links == '#array'

  Scenario: Get Nobel Prizes with invalid query parameters
    Given path '/2.1/nobelPrizes'
    And param invalidParam = 'test'
    When method GET
    Then status 400
    And match header Content-Type contains 'application/json'
    And match response == { code: '#string', message: '#string' }
    
  Scenario: Get non-existent Nobel Prize
    Given path '/2.1/nobelPrizes'
    And param nobelPrizeYear = 1800
    When method GET
    Then status 404
    And match header Content-Type contains 'application/json'  
    And match response == { code: '#string', message: '#string' }

@ignore @skipme
Scenario: test data creation
* def nobelPrizes_get = read('nobelPrizes_get.csv')

